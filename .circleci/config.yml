version: 2
jobs:
  test-install-golang-prev:
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - run:
          name: 'Test install golang (previous release)'
          command: |
            go get -v . && chamber version

  test-install-golang-current:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - run:
          name: 'Test go get install on current golang release'
          command: |
            go get -v . && chamber version

  test:
    docker:
      - image: circleci/golang:1.13
    working_directory: /go/src/github.com/segmentio/chamber
    steps:
      - checkout
      - run:
          name: Test
          command: |
            make test
      - run:
          name: Check modules are tidy and checked in
          command: |
            export GO111MODULE=on
            go mod tidy
            go mod vendor
            if [ "$(git status --porcelain)" != "" ]; then
              echo "git tree is dirty after tidying and vendoring modules"
              echo "ensure go.mod and go.sum are tidy and vendor is checked in"
              git status
              exit 1
            fi

  dist:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - run:
          name: Install nfpm, rpmbuild
          command: |
            sudo make -f Makefile.tools nfpm-debian rpmbuild-debian
      - run:
          name: Make distributables
          command: |
            make -f Makefile.release dist
      - persist_to_workspace:
          root: .
          paths: ['dist/*']

  publish-packagecloud:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - attach_workspace: { at: . }
      - run:
          name: Install tools
          command: |
            # this is all for package_cloud :/
            sudo apt update -q 
            sudo apt install -yq ruby ruby-dev build-essential
            # fixes https://askubuntu.com/questions/872399/error-failed-to-build-gem-native-extension-when-trying-to-download-rubocop
            sudo gem install rake
            sudo make -f Makefile.tools package_cloud
      - run:
          name: Release
          command: |
            make -f Makefile.release publish-packagecloud

  publish-github:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - attach_workspace: { at: . }
      - run:
          name: Install tools
          command: |
            make -f Makefile.tools github-release
      - run:
          name: Release
          command: |
            make -f Makefile.release publish-github

  publish-dockerhub:
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - attach_workspace: { at: . }
      - setup_remote_docker
      - run:
          name: Release
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            make -f Makefile.release publish-dockerhub

workflows:
  version: 2
  test-dist-publish:
    jobs:
      - test
      - test-install-golang-prev
      - test-install-golang-current
      - dist:
          # needed to ensure dist happens on tag events
          filters:
            tags:
              only: /.*/
      - publish-packagecloud:
          context: packagecloud
          requires:
            - dist
          filters:
            # never publish from a branch event
            branches:
              ignore: /.*/
            # release only on tag push events like vX[.Y.Z...][-whatever]
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-[a-zA-Z0-9-]+)?/
      - publish-github:
          context: github-segmentcircle-oss-release
          requires:
            - dist
          filters:
            # never publish from a branch event
            branches:
              ignore: /.*/
            # release only on tag push events like vX[.Y.Z...][-whatever]
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-[a-zA-Z0-9-]+)?/
      - publish-dockerhub:
          context: docker-publish
          requires:
            - dist
          filters:
            # never publish from a branch event
            branches:
              ignore: /.*/
            # release only on tag push events like vX[.Y.Z...][-whatever]
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-[a-zA-Z0-9-]+)?/
